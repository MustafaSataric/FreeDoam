{
  "manifest": {
    "name": "@sapphire/snowflake",
    "version": "3.4.2",
    "description": "Deconstructs and generates snowflake IDs using BigInts",
    "author": {
      "name": "@sapphire"
    },
    "license": "MIT",
    "main": "dist/index.js",
    "module": "dist/index.mjs",
    "browser": "dist/index.global.js",
    "unpkg": "dist/index.global.js",
    "types": "dist/index.d.ts",
    "exports": {
      "import": "./dist/index.mjs",
      "require": "./dist/index.js",
      "types": "./dist/index.d.ts"
    },
    "sideEffects": false,
    "homepage": "https://github.com/sapphiredev/utilities/tree/main/packages/snowflake",
    "scripts": {
      "test": "vitest run",
      "lint": "eslint src tests --ext ts --fix -c ../../.eslintrc",
      "build": "tsup",
      "docs": "typedoc-json-parser",
      "prepack": "yarn build",
      "bump": "cliff-jumper",
      "check-update": "cliff-jumper --dry-run"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/sapphiredev/utilities.git",
      "directory": "packages/snowflake"
    },
    "files": [
      "dist/**/*.js*",
      "dist/**/*.mjs*",
      "dist/**/*.d*"
    ],
    "engines": {
      "node": ">=v14.0.0",
      "npm": ">=7.0.0"
    },
    "keywords": [
      "@sapphire/snowflake",
      "bot",
      "typescript",
      "ts",
      "yarn",
      "discord",
      "sapphire",
      "standalone"
    ],
    "bugs": {
      "url": "https://github.com/sapphiredev/utilities/issues"
    },
    "publishConfig": {
      "access": "public"
    },
    "devDependencies": {
      "@favware/cliff-jumper": "^2.0.0",
      "@vitest/coverage-c8": "^0.29.8",
      "tsup": "^6.7.0",
      "typedoc": "0.23.28",
      "typedoc-json-parser": "^7.2.0",
      "typescript": "^5.0.4",
      "vitest": "^0.29.8"
    },
    "_registry": "npm",
    "_loc": "/home/zap1075571/g560402/gta5-fivem-esxg/server-data/cache/yarn-cache/v6/npm-@sapphire-snowflake-3.4.2-365af8e7b57ada924ec8e85383b921280f81d128-integrity/node_modules/@sapphire/snowflake/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n\n![Sapphire Logo](https://cdn.skyra.pw/gh-assets/sapphire-banner.png)\n\n# @sapphire/snowflake\n\n**Deconstruct and generate snowflake IDs using BigInts.**\n\n[![GitHub](https://img.shields.io/github/license/sapphiredev/utilities)](https://github.com/sapphiredev/utilities/blob/main/LICENSE.md)\n[![codecov](https://codecov.io/gh/sapphiredev/utilities/branch/main/graph/badge.svg?token=OEGIV6RFDO)](https://codecov.io/gh/sapphiredev/utilities)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/@sapphire/snowflake?logo=webpack&style=flat-square)](https://bundlephobia.com/result?p=@sapphire/snowflake)\n[![npm](https://img.shields.io/npm/v/@sapphire/snowflake?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/@sapphire/snowflake)\n\n</div>\n\n**Table of Contents**\n\n-   [Description](#description)\n-   [Features](#features)\n-   [Installation](#installation)\n-   [Usage](#usage)\n    -   [Constructing snowflakes](#constructing-snowflakes)\n        -   [Snowflakes with custom epoch](#snowflakes-with-custom-epoch)\n        -   [Snowflake with Discord epoch constant](#snowflake-with-discord-epoch-constant)\n        -   [Snowflake with Twitter epoch constant](#snowflake-with-twitter-epoch-constant)\n    -   [Deconstructing snowflakes](#deconstructing-snowflakes)\n        -   [Snowflakes with custom epoch](#snowflakes-with-custom-epoch-1)\n        -   [Snowflake with Discord epoch constant](#snowflake-with-discord-epoch-constant-1)\n        -   [Snowflake with Twitter epoch constant](#snowflake-with-twitter-epoch-constant-1)\n-   [Buy us some doughnuts](#buy-us-some-doughnuts)\n-   [Contributors âœ¨](#contributors-%E2%9C%A8)\n\n## Description\n\nThere is often a need to get a unique ID for entities, be that for Discord messages/channels/servers, keys in a database or many other similar examples. There are many ways to get such a unique ID, and one of those is using a so-called \"snowflake\". You can read more about snowflake IDs in [this Medium article](https://medium.com/better-programming/uuid-generation-snowflake-identifiers-unique-2aed8b1771bc).\n\n## Features\n\n-   Written in TypeScript\n-   Bundled with esbuild so it can be used in NodeJS and browsers\n-   Offers CommonJS, ESM and UMD bundles\n-   Offers predefined epochs for Discord and Twitter\n-   Fully tested\n\n## Installation\n\nYou can use the following command to install this package, or replace `npm install` with your package manager of choice.\n\n```sh\nnpm install @sapphire/snowflake\n```\n\n## Usage\n\n**Note:** While this section uses `require`, the imports match 1:1 with ESM imports. For example `const { Snowflake } = require('@sapphire/snowflake')` equals `import { Snowflake } from '@sapphire/snowflake'`.\n\n### Constructing snowflakes\n\n#### Snowflakes with custom epoch\n\n```typescript\n// Import the Snowflake class\nconst { Snowflake } = require('@sapphire/snowflake');\n\n// Define a custom epoch\nconst epoch = new Date('2000-01-01T00:00:00.000Z');\n\n// Create an instance of Snowflake\nconst snowflake = new Snowflake(epoch);\n\n// Generate a snowflake with the given epoch\nconst uniqueId = snowflake.generate();\n```\n\n#### Snowflake with Discord epoch constant\n\n```typescript\n// Import the Snowflake class\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\n\n// Generate a snowflake with Discord's epoch\nconst uniqueId = DiscordSnowflake.generate();\n\n// Alternatively, you can use the method directly\nconst uniqueId = DiscordSnowflake.generate();\n```\n\n#### Snowflake with Twitter epoch constant\n\n```typescript\n// Import the Snowflake class\nconst { TwitterSnowflake } = require('@sapphire/snowflake');\n\n// Generate a snowflake with Twitter's epoch\nconst uniqueId = TwitterSnowflake.generate();\n\n// Alternatively, you can use the method directly\nconst uniqueId = TwitterSnowflake.generate();\n```\n\n### Deconstructing snowflakes\n\n#### Snowflakes with custom epoch\n\n```typescript\n// Import the Snowflake class\nconst { Snowflake } = require('@sapphire/snowflake');\n\n// Define a custom epoch\nconst epoch = new Date('2000-01-01T00:00:00.000Z');\n\n// Create an instance of Snowflake\nconst snowflake = new Snowflake(epoch);\n\n// Deconstruct a snowflake with the given epoch\nconst uniqueId = snowflake.deconstruct('3971046231244935168');\n```\n\n#### Snowflake with Discord epoch constant\n\n```typescript\n// Import the Snowflake class\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\n\n// Deconstruct a snowflake with Discord's epoch\nconst uniqueId = DiscordSnowflake.deconstruct('3971046231244935168');\n\n// Alternatively, you can use the method directly\nconst uniqueId = DiscordSnowflake.deconstruct('3971046231244935168');\n```\n\n#### Snowflake with Twitter epoch constant\n\n```typescript\n// Import the Snowflake class\nconst { TwitterSnowflake } = require('@sapphire/snowflake');\n\n// Deconstruct a snowflake with Twitter's epoch\nconst uniqueId = TwitterSnowflake.deconstruct('3971046231244935168');\n\n// Alternatively, you can use the method directly\nconst uniqueId = TwitterSnowflake.deconstruct('3971046231244935168');\n```\n\n---\n\n## Buy us some doughnuts\n\nSapphire Community is and always will be open source, even if we don't get donations. That being said, we know there are amazing people who may still want to donate just to show their appreciation. Thank you very much in advance!\n\nWe accept donations through Open Collective, Ko-fi, PayPal, Patreon and GitHub Sponsorships. You can use the buttons below to donate through your method of choice.\n\n|   Donate With   |                       Address                       |\n| :-------------: | :-------------------------------------------------: |\n| Open Collective | [Click Here](https://sapphirejs.dev/opencollective) |\n|      Ko-fi      |      [Click Here](https://sapphirejs.dev/kofi)      |\n|     Patreon     |    [Click Here](https://sapphirejs.dev/patreon)     |\n|     PayPal      |     [Click Here](https://sapphirejs.dev/paypal)     |\n\n## Contributors\n\nPlease make sure to read the [Contributing Guide][contributing] before making a pull request.\n\nThank you to all the people who already contributed to Sapphire!\n\n<a href=\"https://github.com/sapphiredev/utilities/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=sapphiredev/utilities\" />\n</a>\n\n[contributing]: https://github.com/sapphiredev/.github/blob/main/.github/CONTRIBUTING.md\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@sapphire/snowflake/-/snowflake-3.4.2.tgz#365af8e7b57ada924ec8e85383b921280f81d128",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@sapphire/snowflake/-/snowflake-3.4.2.tgz",
    "hash": "365af8e7b57ada924ec8e85383b921280f81d128",
    "integrity": "sha512-KJwlv5gkGjs1uFV7/xx81n3tqgBwBJvH94n1xDyH3q+JSmtsMeSleJffarEBfG2yAFeJiFA4BnGOK6FFPHc19g==",
    "registry": "npm",
    "packageName": "@sapphire/snowflake",
    "cacheIntegrity": "sha512-KJwlv5gkGjs1uFV7/xx81n3tqgBwBJvH94n1xDyH3q+JSmtsMeSleJffarEBfG2yAFeJiFA4BnGOK6FFPHc19g== sha1-Nlr457V62pJOyOhTg7khKA+B0Sg="
  },
  "registry": "npm",
  "hash": "365af8e7b57ada924ec8e85383b921280f81d128"
}